#!/bin/bash
#
# chkconfig: 2345 33 99
# description: run user-data
#
# ec2-run-user-data	Run instance user-data if it looks like a script or url.
#
# Only retrieves and runs the user-data script once per instance.  If
# you want the user-data script to run again (e.g., on the next boot)
# then add this command in the user-data script:
#   rm -f /var/ec2/*ec2-run-user-data.*

# requires:
#
# curl, runurl (reqs wget), perl


#
# History:
#
#	~~9/2010
# 	- modified for us and centos, keen99@gmail.com 
# 	- added runurl support, reordered tests to be more flexible, fixed missing quote bugs, removed req. for debians tempfile
#	...sourced from http://ec2ubuntu.googlecode.com/svn/trunk/etc/init.d/ec2-run-user-data
#
#   2010-01-07 Tom White
#   - Add support for gzip-compressed user data
#
#   2008-05-16 Eric Hammond <ehammond@thinksome.com>
#   - Initial version including code from Kim Scheibel, Jorge Oliveira
#
prog=$(basename $0)
logger="logger -s -t $prog"
curl="curl --retry 3 --silent --show-error --fail"
instance_data_url=http://169.254.169.254/2008-02-01



# Wait until meta-data is available.
$logger "waiting for meta-data..."
perl -MIO::Socket::INET -e '
 until(new IO::Socket::INET("169.254.169.254:80")){print"Waiting for meta-data...\n";sleep 1}
' | $logger

#we depend on meta-data elsewhere, so let's wait for it anyway before we keep going.
# Exit if we have already run on this instance (e.g., previous boot).
ami_id=$($curl $instance_data_url/meta-data/ami-id)
been_run_file=/var/ec2/$prog.$ami_id
mkdir -p $(dirname $been_run_file)
if [ -f $been_run_file ]; then
  $logger < $been_run_file
  exit
fi


# Retrieve the instance user-data and run it if it looks like a script
user_data_file=/tmp/ec2.$$.user-data
touch $user_data_file
chmod 700 $user_data_file
#$(tempfile --prefix ec2 --suffix .user-data --mode 700)
$logger "Retrieving user-data"
$curl -o $user_data_file $instance_data_url/user-data 2>&1 | $logger
if [ -e $user_data_file ]; then
	if [ "$(file -bi $user_data_file)" = 'application/x-gzip' ]; then
		$logger "Uncompressing gzip'd user-data"
		mv $user_data_file $user_data_file.gz
		gunzip $user_data_file.gz
	fi
	if [ ! -s $user_data_file ]; then
		$logger "No user-data available"
		echo "user-data was not available" > $been_run_file
	elif head -1 $user_data_file | grep "http.://"; then
		$logger "Running user-data URL" 2>&1 | logger -t "user-data"
		echo "user-data url has already been run on this instance" > $been_run_file
		/usr/local/bin/runurl $(cat $user_data_file) 2>&1 | $logger
		$logger "user-data exit code: $?"
	elif head -1 $user_data_file | egrep -q '^#!'; then
		$logger "Running user-data"
		echo "user-data has already been run on this instance" > $been_run_file
		$user_data_file 2>&1 | logger -t "user-data"
		$logger "user-data exit code: $?"
	else
		$logger "Skipping user-data as it does not begin with #!"
		echo "user-data did not begin with #!" > $been_run_file

	fi
else
	$logger	"no user data file"
fi
rm -f $user_data_file
